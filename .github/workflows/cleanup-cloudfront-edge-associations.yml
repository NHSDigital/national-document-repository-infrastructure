name: 'Remove Lambda@Edge Associations'

on:
  workflow_call:
    inputs:
      sandbox_workspace:
        description: 'The sandbox workspace name'
        required: true
        type: string
      lambda_function_name:
        description: 'The sandbox workspace name'
        required: true
        type: string
      aws_region:
        description: 'AWS Region to use for the Lambda and CloudFront operations'
        required: true
        type: string
      python_version:
        description: 'Version of Python to run the cleanup script against'
        required: true
        type: 'string'
      build_branch:
        description: 'Feature branch to push to sandbox.'
        required: true
        type: 'string'
    secrets:
      AWS_ASSUME_ROLE:
        required: true

permissions:
  pull-requests: write
  id-token: write # Required for requesting the JWT
  contents: read # Required for actions/checkout

jobs:
  view_action_parameters:
    name: View Input Variables
    runs-on: ubuntu-latest
    steps:
      - name: Display client passed variables
        run: |
          echo "Sandbox: ${{ inputs.sandbox_workspace }}"
          echo "Region: ${{ inputs.aws_region }}"

  remove_edge_associations:
    name: Remove Lambda@Edge Associations
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: 'nhsconnect/national-document-repository-infrastructure'
          ref: ${{ inputs.build_branch }}
          fetch-depth: '0'

      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-region: ${{ inputs.aws_region }}

      - name: Get CloudFront Distribution ID
        id: cloudfront
        run: |
          aws cloudfront list-distributions > distributions.json
          distribution_id=$(jq -r --arg origin_id "${{ inputs.sandbox_workspace }}-lloyd-george-store" \
          '.DistributionList.Items[] | select(.Origins.Items[].Id==$origin_id) | .Id' distributions.json | head -n 1)

          if [ -z "$distribution_id" ]; then
            echo "No distribution found for origin ID: ${{ inputs.sandbox_workspace }}-lloyd-george-store"
            exit 1
          fi

          echo "Distribution ID found: $distribution_id"
          echo "DISTRIBUTION_ID=$distribution_id" >> $GITHUB_ENV

      - name: Install Python Dependencies
        run: |
          python3 -m venv ./venv
          ./venv/bin/pip3 install --upgrade pip boto3==1.33.11

      - name: Remove Lambda@Edge & CloudFront Associations
        run: ./venv/bin/python3 -u scripts/remove_edge_associations.py ${{ inputs.sandbox_workspace }}
        env:
          DISTRIBUTION_ID: ${{ env.DISTRIBUTION_ID }}
          LAMBDA_FUNCTION_NAME: ${{ inputs.lambda_function_name }}
