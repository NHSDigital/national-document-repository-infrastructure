# .github/workflows/terraform-dev
name: 'Deploy Feature Branch to Sandbox with Dispatch'

on:
  workflow_dispatch:
    inputs:
      build_branch:
        default: "main"
        description: "Feature branch to push to sandbox."
        required: true
        type: "string"
      sandbox:
        description: "Which Sandbox to push to."
        required: true
        type: "string"
      terraform_vars:
        default: "dev.tfvars"
        description: "Which vars file is required? For test, change to test.tfvars"
        required: true
        type: "string"
      environment:
        default: "development"
        description: "This is the environement the action will run in, for ndr-test, set to 'test'"
        required: true
        type: "string"
    secrets:
      AWS_ASSUME_ROLE:
        required: true

permissions:
  pull-requests: write
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
    
jobs:
  terraform_process:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment}}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.build_branch}}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
        role-skip-session-tagging: true
        aws-region: ${{ vars.AWS_REGION }}
      
    - name: View AWS Role
      run: aws sts get-caller-identity

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.4
        terraform_wrapper: false
      
    - name: Terraform Init
      id: init
      run: terraform init -backend-config=backend.conf
      working-directory: ./infrastructure 
      shell: bash

    - name: Terraform Set Workspace
      id: workspace
      run:  terraform workspace select ${{ github.event.inputs.sandbox}}
      working-directory: ./infrastructure 
      shell: bash
      
      # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./infrastructure 

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -input=false -no-color -var-file="${{vars.TF_VARS_FILE}}" -out tf.plan
      working-directory: ./infrastructure
      shell: bash
    
    - name: Terraform Apply 
      run: terraform apply -auto-approve -input=false tf.plan
      working-directory: ./infrastructure

  # run_main_repo_deploy_lambdas:
  #   name: Deploy UI
  #   needs: ['terraform_process']
  #   uses: nhsconnect/national-document-repository/.github/workflows/new_lambdas-deploy-feature-to-sandbox.yml@main
  #   with:
  #     build_branch: nhsconnect/national-document-repository/main
  #     sandbox: ${{ inputs.sandbox }}
  #     environment: ${{ inputs.environment }}
  #   secrets:
  #     AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}
  
  # run_main_repo_deploy_ui:
  #   name: Deploy UI
  #   needs: ['terraform_process']
  #   uses: nhsconnect/national-document-repository/.github/workflows/new-ui-deploy-feature-to-sandbox-manual.yml@main
  #   with:
  #     build_branch: nhsconnect/national-document-repository/main
  #     sandbox: ${{ inputs.sandbox }}
  #     environment: ${{ inputs.environment }}
  #   secrets:
  #     AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}

  run_main_repo_deploy_lambdas:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment}}

    steps:
    - name: Invoke workflow in another repo with inputs
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: new_full-deploy.yaml
        repo: nhsconnect/national-document-repository
        inputs: '{ "build_branch": "main", "sandbox": "${{ inputs.sandbox }}", "environment": "${{ inputs.environment }}" }'
        
