name: 'Daily Healthcheck Deploy and Destroy'

#on:
#  schedule:
#    - cron: 30 4 * * 1-5
on:
  workflow_dispatch:
    inputs:
      buildBranch:
        description: 'Feature branch to push to sandbox.'
        required: true
        type: 'string'
      sandboxWorkspace:
        description: 'Which Sandbox to push to.'
        required: true
        type: 'string'
      environment:
        default: 'development'
        description: 'Which environment should this run against'
        required: true
        type: 'string'

permissions:
  pull-requests: write
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  terraform_process:
    runs-on: ubuntu-latest
    environment: development

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: View AWS Role
        run: aws sts get-caller-identity

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.4
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=backend.conf
        working-directory: ./infrastructure
        shell: bash

      - name: Terraform Set Workspace
        id: workspace
        run: terraform workspace select -or-create $SANDBOX
        working-directory: ./infrastructure
        shell: bash

        # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ./infrastructure

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -no-color -var-file="${{vars.TF_VARS_FILE}}" -out tf.plan
        working-directory: ./infrastructure
        shell: bash

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false tf.plan
        working-directory: ./infrastructure

  run_full_deploy_to_sandbox:
    name: Full Deploy of Main to Sandbox and Run Tests
    needs: [ 'terraform_process' ]
    uses: nhsconnect/national-document-repository/.github/workflows/full-deploy-to-sandbox.yml@PRMP-1291
    with:
      build_branch: main
      sandbox: ndrd
      environment: development

  destroy_test_environment:
    name: Destroy the Sandbox Environment from previous job
    needs: [ 'run_full_deploy_to_sandbox' ]
    uses: ./.github/workflows/terraform-destroy-environment-manual.yml
    with:
      build_branch: main
      environment: development
      sandbox_workspace: ndrd